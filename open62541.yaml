---
GENERATOR:
  PackageName: open62541
  PackageDescription: "Package open62541 provides Go bindings for https://github.com/open62541/open62541"
  PackageLicense: "Mozilla Public License Version 2.0"
  Includes:
    [
      "open62541/architecture_base.h",
      "open62541/architecture_definitions.h",
      "open62541/architecture_functions.h",
      "open62541/client_config_default.h",
      "open62541/client_config.h",
      "open62541/client.h",
      "open62541/client_highlevel_async.h",
      "open62541/client_highlevel.h",
      "open62541/client_subscriptions.h",
      "open62541/config.h",
      "open62541/constants.h",
      "open62541/ms_stdint.h",
      "open62541/network_tcp.h",
      "open62541/nodeids.h",
      "open62541/server_config_default.h",
      "open62541/server_config.h",
      "open62541/server.h",
      "open62541/server_pubsub.h",
      "open62541/statuscodes.h",
      "open62541/types_generated.h",
      "open62541/types_generated_handling.h",
      "open62541/types.h",
      "open62541/util.h",
      "open62541/ziptree.h",
    ]
  FlagGroups:
    - {name: LDFLAGS, flags: [-lopen62541]}
PARSER:
  IncludePaths:
    ["/usr/include", "/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include"]
  SourcesPaths: ["open62541/server.h"]
  Defines:
    __builtin_va_start: {}
    __builtin_va_end: {}
TRANSLATOR:
  ConstRules:
    defines: eval
  PtrTips:
    function:
      - { target: "UA_Server_newWithConfig$", tips: [ref] }
      # - { target: "UA_Server_getConfig$", tips: [ref] }
      # - { target: "UA_ServerConfig_setDefault$", tips: [ref] }
      # - { target: "UA_ServerConfig_setMinimal$", tips: [ref, size, ref] }
      # - {
      #     target: "UA_ServerConfig_setMinimalCustomBuffer$",
      #     tips: [ref, size, ref, size, size],
      #   }
  Rules:
    global:
      # - { action: accept, from: "^UA_" }
      # - { action: ignore, from: "^UA_LOG_" }

      - { action: accept, from: "^UA_Server$" }
      - { action: accept, from: "^UA_Server_new$" }
      # - { action: accept, from: "^UA_Server_newWithConfig$" }
      # - { action: accept, from: "^UA_Server_getConfig$" }
      # - { action: accept, from: "^UA_ServerConfig_setDefault$" }
      # - { action: accept, from: "^UA_ServerConfig_setMinimal$" }
      # - { action: accept, from: "^UA_ServerConfig_setMinimalCustomBuffer$" }
      - { action: replace, from: ^UA_ }
    # private:
    #   - { transform: unexport }
    post-global:
      - { transform: export }
      - { load: snakecase }
